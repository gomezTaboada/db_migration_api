substitutions:
  _SERVICE_ACCOUNT: 'my-service-account@my-project.iam.gserviceaccount.com'
  _SECRET_NAME: 'secret-name'
  _CLOUD_SQL_URI: 'project:region:instance-name'
  _REGION: 'us-central1'
  _REPO: 'repository-name'
  _SERVICE_NAME: 'fastapi-app'
  _PORT: '8000'

steps:
  # Build the image with Artifact Registry tag
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE_NAME}',
      '.'
    ]

  # Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE_NAME}'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', '${_SERVICE_NAME}',
        '--image', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE_NAME}',
        '--region', '${_REGION}',
        '--port', '${_PORT}',
        '--platform', 'managed',
        '--allow-unauthenticated',
        '--service-account', '${_SERVICE_ACCOUNT}',
        '--add-cloudsql-instances', '${_CLOUD_SQL_URI}',
        '--set-env-vars', 'ENVIRONMENT=CLOUD,STORAGE_PROJECT_ID=${PROJECT_ID}',
        '--set-secrets', 'DATABASE_CREDENTIALS=${_SECRET_NAME}:latest'
      ]

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE_NAME}
